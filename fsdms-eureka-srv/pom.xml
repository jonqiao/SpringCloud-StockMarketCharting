<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.1.9.RELEASE</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>
  <groupId>com.fsd</groupId>
  <artifactId>fsdms-eureka-srv</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>fsdms-eureka-srv</name>
  <description>FSD Microservice Project for Eureka server</description>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <spring-cloud.version>Greenwich.SR3</spring-cloud.version>
    <java.version>1.8</java.version>
    <!--docker private registry repository-->
    <!--    <docker.registry>127.0.0.1:5000</docker.registry>-->
    <dockerfile.maven.version>1.4.13</dockerfile.maven.version>
    <docker.username>dlqiaoxy</docker.username>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
    </dependency>

    <!--    <dependency>-->
    <!--      <groupId>org.springframework.cloud</groupId>-->
    <!--      <artifactId>spring-cloud-starter-config</artifactId>-->
    <!--    </dependency>-->

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-tomcat</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-undertow</artifactId>
      <!--      <scope>provided</scope>-->
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
      <!--      <plugin>-->
      <!--        &lt;!&ndash; need to config win10 system env: DOCKER_HOST=tcp://127.0.0.1:2375&ndash;&gt;-->
      <!--        <groupId>com.spotify</groupId>-->
      <!--        <artifactId>dockerfile-maven-plugin</artifactId>-->
      <!--        <version>${dockerfile.maven.version}</version>-->
      <!--        <executions>-->
      <!--          <execution>-->
      <!--            <id>default</id>-->
      <!--            <goals>-->
      <!--              &lt;!&ndash;comment out the goal if don't need it&ndash;&gt;-->
      <!--              <goal>build</goal>-->
      <!--              <goal>push</goal>-->
      <!--            </goals>-->
      <!--          </execution>-->
      <!--        </executions>-->
      <!--        <configuration>-->
      <!--          <username>${docker.username}</username>-->
      <!--          <password>d25c27fb-458d-44d9-8523-b08e5db959d2</password>-->
      <!--          <repository>${docker.username}/${project.artifactId}</repository>-->
      <!--          <tag>latest</tag>-->
      <!--          <buildArgs>-->
      <!--            &lt;!&ndash;provide ARG to Dockerfile&ndash;&gt;-->
      <!--            <JAR_FILE>target/${project.artifactId}-${project.version}.jar</JAR_FILE>-->
      <!--          </buildArgs>-->
      <!--        </configuration>-->
      <!--      </plugin>-->
    </plugins>
  </build>

</project>
